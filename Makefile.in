SHELL=/bin/sh

PACKAGE_TARNAME=@PACKAGE_TARNAME@
PACKAGE_NAME=@PACKAGE_NAME@
PACKAGE_VERSION=@PACKAGE_VERSION@

TARBALL_NAME=lconf-web

VERSION_MAJOR=@VERSION_MAJOR@
VERSION_MINOR=@VERSION_MINOR@
VERSION_PATCH=@VERSION_PATCH@
VERSION_EXTEN=@VERSION_EXTEN@

RELEASE_DATE=@RELEASE_DATE@
TAR_DIR_NAME=$(shell basename `pwd`)

prefix=@prefix@
exec_prefix=@exec_prefix@
LOGDIR=@web_log_dir@
CFGDIR=@sysconfdir@
BINDIR=@bindir@
CGIDIR=@sbindir@
HTMLDIR=@datarootdir@

INSTALL=@INSTALL@
INSTALL_OPTS=@INSTALL_OPTS@
INSTALL_OPTS_WEB=@INSTALL_OPTS_WEB@
INSTALL_OPTS_CACHE=@INSTALL_OPTS_CACHE@

BIN_USER=@bin_user@
BIN_GROUP=@bin_group@
WEB_USER=@web_user@
WEB_GROUP=@web_group@
WEB_PATH=@web_path@
WEB_APACHE_PATH=@web_apache_path@

SED=@SED@
PHP=@PHP@
PHING=@PHING@
PHING_CALL=cd @srcdir@/etc/ && ../bin/phing -f build.xml
PHPUNIT=@PHPUNIT@
PHPCS=@PHPCS@


LOC_PO=app/data/i18n/po
LOC_MO=app/data/i18n/mo
LOC_TEMPLATE=$(LOC_PO)/templates/default.pot

SRC_DIR=@srcdir@
SRC_LIB=@srcdir@/lib
SRC_PUB=@srcdir@/pub
SRC_ETC=@srcdir@/etc
SRC_BIN=@srcdir@/bin
SRC_APP=@srcdir@/app
SRC_SITE=@srcdir@/etc/conf.d

none:
#	@printf "\t%-22s - %s\n" "" ""
	@printf "Please supply a command line argument (i.e. 'make install').\n\n"
	@printf "Generic targets: install, clean\n\n"
	@printf "For updates please use 'upgrade' to avoid overwriting your siteconfig!\n\n"
logclean:
	rm -rf $(LOGDIR)/*.log

locclean:
	rm -f \
		$(LOC_MO)/*.mo \
		$(LOC_MO)/*.json

cacheclean:
	$(PHING_CALL) agavi-clear-cache	

clean: distclean

distclean:
	rm -rf \
	autom4te.cache/ \
	.build/ \
	
	rm -f \
	Makefile \
	lib/Makefile \
	pub/Makefile \
	etc/Makefile \
	bin/Makefile \
	doc/Makefile \
	app/Makefile \
	app/config.php \
	app/config/databases.xml \
	app/config/icinga.xml \
	app/config/logging.xml \
	app/config/settings.xml \
	app/config/translation.xml \
	app/config/factories.xml \
	app/modules/Api/config/module.xml \
	app/modules/Api/config/access.xml \
	app/modules/AppKit/config/module.xml \
	app/modules/AppKit/config/auth.xml \
	app/modules/LConf/config/module.xml \
	app/modules/LConf/lib/ldapConfig/staticObjects.ini \
	app/modules/LConf/lib/ldapConfig/objectDefaultAttributes.ini \
	etc/build.properties \
	etc/apache2/lconf-web.conf \
	bin/clearcache.sh \
	pub/.htaccess \
	etc/conf.d/access.xml \
	etc/conf.d/databases.xml \
	etc/conf.d/Makefile 	
	
remove-temp-files:
	bin/rmtmp-files.sh

create-tarball:
	#tar -czf ../$(PACKAGE_TARNAME)-$(PACKAGE_VERSION).tar.gz ../$(TAR_DIR_NAME)
	./bin/make-tarball --prefix $(PACKAGE_TARNAME)-$(PACKAGE_VERSION)/

create-tarball-nightly:
	#${MAKE} submodule-update
	./bin/make-tarball --prefix $(PACKAGE_TARNAME)-$(PACKAGE_VERSION)-`date +%Y%m%d`-`git rev-parse --short HEAD`/

testdeps:
	 $(PHP) bin/testdeps.php

test-precede:
	if test ! -d "$(SRC_DIR)/.build"; then mkdir .build; fi
	

test: test-precede
	rm -f ./build/test-results.xml
	$(PHPUNIT) --configuration=$(SRC_DIR)/tests/phpunit/suites.xml

test-cs: test-precede
	rm -f $(SRC_DIR)/.build/checkstyle.xml
	touch $(SRC_DIR)/.build/checkstyle.xml
	$(PHPCS) \
		--standard=$(SRC_DIR)/tests/phpcs/YACS \
		--report=checkstyle \
		--report-file=$(SRC_DIR)/.build/checkstyle.xml \
		--ignore="cache,\.js$$" \
		$(SRC_DIR)/app

devel-inplace-config:
	mkdir -p \
	$(SRC_DIR)/app/cache/config \
	$(LOGDIR) \
	$(SRC_DIR)/app/modules/Reporting/data/tmp
	chown $(WEB_USER).$(WEB_GROUP) \
		$(SRC_DIR)/app/cache \
		$(SRC_DIR)/app/cache/config \
		$(LOGDIR) \
		$(SRC_DIR)/app/modules/Reporting/data/tmp
	@printf "Done.\n"

devel-reconfigure:
	@EXEC=`head config.log  | grep "$$ configure" | sed -e 's/\s\+\$$\s\+//g'`; \
	make distclean; \
	sh $$EXEC

devel-update-version:
	@VFILE="doc/VERSION"; \
        VERSION=`printf "%d.%d.%d" "$(VERSION_MAJOR)" "$(VERSION_MINOR)" "$(VERSION_PATCH)"`; \
        test ! "X$(VERSION_EXTEN)" = "X" && VERSION=`printf "%s-%s" "$$VERSION" "$(VERSION_EXTEN)"`; \
        echo "$$VERSION" > $$VFILE; \
        echo "Upgraded $$VFILE to version $$VERSION"

install-javascript:
	$(INSTALL) -m 755 $(INSTALL_OPTS) -d $(DESTDIR)$(prefix)/pub/js
	ln -sf $(DESTDIR)$(prefix)/lib/ext3 $(DESTDIR)$(prefix)/pub/js/ext3

install-apache-config:
	${INSTALL} -b -m 664 $(INSTALL_OPTS) etc/apache2/lconf-web.conf $(DESTDIR)$(WEB_APACHE_PATH)/lconf-web.conf
	@printf "\nInstalled configuration in '%s'.\n" "$(WEB_APACHE_PATH)"
	@printf "Please make sure that the directory is included or \n"
	@printf "include %s/lconf-web.conf manually.\n" "$(WEB_APACHE_PATH)"
	@printf "\nPlease restart your apache in order to complete this step.\n\n"

install-lib:
	cd $(SRC_LIB) && $(MAKE)

install-pub:
	cd $(SRC_PUB) && $(MAKE)

install-etc:
	cd $(SRC_ETC) && $(MAKE)

install-bin:
	cd $(SRC_BIN) && $(MAKE)




install-app:
	cd $(SRC_APP) && $(MAKE)

install-siteconfig:
	cd $(SRC_SITE) && $(MAKE)

install-db:
	
	$(INSTALL) -m 755 $(INSTALL_OPTS_WEB) -d $(DESTDIR)$(prefix)/app/data/db/ 
	$(INSTALL) -m 755 $(INSTALL_OPTS_WEB) etc/schema/lconf.db $(DESTDIR)$(prefix)/app/data/db/lconf.db 

install-log:
	$(INSTALL) -m 755 $(INSTALL_OPTS_WEB) -d $(DESTDIR)$(LOGDIR)

install-all: install-lib install-pub install-etc install-bin install-app install-log install-db

install: install-all install-siteconfig install-done

install-done:
	@printf "\n\n"
	@printf "Installation if lconf-web succeeded.\n"
	@printf "\n"
	@printf	"Please check the new Apache2 configuration (etc/apache2/lconf-web.conf).\n"
	@printf "\n"
	@printf "You can install it simply by invoking 'make install-apache-config'.\n"
	@printf "\n"
	@printf "If you don't want this you can restore its old behavior by\n"
	@printf "typing 'make install-javascript'. This will install the old symlinks\n"
	@printf "\n"
	@printf "Have fun!\n\n"

upgrade: install-all upgrade-done

upgrade-done:
	@printf "\n\n"
	@printf "Upgrade of lconf-web succeeded.\n"
	@printf "\n"
	@printf "Please check your site config files if something have to be changed.\n"
	@printf "\n"
	@printf "For database upgrades look into etc/schema/updates and import the\n"
	@printf "appropriate changes into your database\n"
	@printf "\n"
	@printf "Have fun!\n\n"

create-tarball:
	$(eval version := $(shell git describe --tags HEAD | sed 's/^v//'))
	git archive -o "../${TARBALL_NAME}-$(version).tar.gz" --prefix="${TARBALL_NAME}-$(version)/" HEAD
	@echo "You find your tarball here: ../${TARBALL_NAME}-$(version).tar.gz"


make-create-files:
	$(SED) -i '/^# INSTALL_FILES_BEGIN/,/^# INSTALL_FILES_END/{D}' $(INC_MAKE_FILES) > $(INC_MAKE_FILES).tmp
	mv $(INC_MAKE_FILES).tmp $(INC_MAKE_FILES)
	./bin/create-makefile.sh ./ >> $(INC_MAKE_FILES)

lconf-reset-password:
	$(PHING_CALL) icinga-reset-password
