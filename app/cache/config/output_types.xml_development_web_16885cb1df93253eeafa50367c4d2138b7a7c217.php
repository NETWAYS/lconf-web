<?php

// This is a compiled Agavi configuration file
// Compiled from: /usr/local/lconf-standalone/app/config/output_types.xml
// Generated by: AgaviOutputTypeConfigHandler
// Date: 2011-09-02T13:02:10+0000

$ot = new AgaviOutputType();
$ot->initialize($this->context, array (
  'http_headers' => 
  array (
    'Content-Type' => 'text/html; charset=UTF-8',
  ),
), 'html', array (
  'php' => 
  array (
    'class' => 'AgaviPhpRenderer',
    'instance' => NULL,
    'parameters' => 
    array (
      'assigns' => 
      array (
        'routing' => 'ro',
        'request' => 'rq',
        'controller' => 'ct',
        'user' => 'us',
        'translation_manager' => 'tm',
        'request_data' => 'rd',
      ),
      'var_name' => 't',
    ),
  ),
), 'php', array (
  'extjs' => 
  array (
    'layers' => 
    array (
      'content' => 
      array (
        'class' => 'AgaviFileTemplateLayer',
        'parameters' => 
        array (
        ),
        'renderer' => NULL,
        'slots' => 
        array (
        ),
      ),
      'decorator' => 
      array (
        'class' => 'AgaviFileTemplateLayer',
        'parameters' => 
        array (
          'directory' => '/usr/local/lconf-standalone/app/templates',
          'template' => 'ExtJsViewport',
        ),
        'renderer' => NULL,
        'slots' => 
        array (
          'javascript' => 
          array (
            'action' => 'Widgets.HeaderData',
            'module' => 'AppKit',
            'output_type' => NULL,
            'request_method' => NULL,
            'parameters' => 
            array (
              'type' => 'javascript',
            ),
          ),
          'css' => 
          array (
            'action' => 'Widgets.HeaderData',
            'module' => 'AppKit',
            'output_type' => NULL,
            'request_method' => NULL,
            'parameters' => 
            array (
              'type' => 'css',
            ),
          ),
          'head_start' => 
          array (
            'action' => 'Ext.Header',
            'module' => 'AppKit',
            'output_type' => NULL,
            'request_method' => NULL,
            'parameters' => 
            array (
            ),
          ),
        ),
      ),
    ),
    'parameters' => 
    array (
    ),
  ),
  'slot' => 
  array (
    'layers' => 
    array (
      'content' => 
      array (
        'class' => 'AgaviFileTemplateLayer',
        'parameters' => 
        array (
        ),
        'renderer' => NULL,
        'slots' => 
        array (
        ),
      ),
    ),
    'parameters' => 
    array (
    ),
  ),
), 'extjs', NULL);
$this->outputTypes['html'] = $ot;
$ot = new AgaviOutputType();
$ot->initialize($this->context, array (
  'http_headers' => 
  array (
    'Content-Type' => 'text/javascript; charset=UTF-8',
  ),
), 'javascript', array (
  'php' => 
  array (
    'class' => 'AgaviPhpRenderer',
    'instance' => NULL,
    'parameters' => 
    array (
      'assigns' => 
      array (
        'routing' => 'ro',
        'request' => 'rq',
        'controller' => 'ct',
        'user' => 'us',
        'translation_manager' => 'tm',
        'request_data' => 'rd',
      ),
      'var_name' => 't',
    ),
  ),
), 'php', array (
  'simple' => 
  array (
    'layers' => 
    array (
      'content' => 
      array (
        'class' => 'AgaviFileTemplateLayer',
        'parameters' => 
        array (
        ),
        'renderer' => NULL,
        'slots' => 
        array (
        ),
      ),
    ),
    'parameters' => 
    array (
    ),
  ),
), 'simple', NULL);
$this->outputTypes['javascript'] = $ot;
$ot = new AgaviOutputType();
$ot->initialize($this->context, array (
  'http_headers' => 
  array (
    'Content-Type' => 'text/css; charset=UTF-8',
  ),
), 'css', array (
  'php' => 
  array (
    'class' => 'AgaviPhpRenderer',
    'instance' => NULL,
    'parameters' => 
    array (
      'assigns' => 
      array (
        'routing' => 'ro',
        'request' => 'rq',
        'controller' => 'ct',
        'user' => 'us',
        'translation_manager' => 'tm',
        'request_data' => 'rd',
      ),
      'var_name' => 't',
    ),
  ),
), 'php', array (
  'simple' => 
  array (
    'layers' => 
    array (
      'content' => 
      array (
        'class' => 'AgaviFileTemplateLayer',
        'parameters' => 
        array (
        ),
        'renderer' => NULL,
        'slots' => 
        array (
        ),
      ),
    ),
    'parameters' => 
    array (
    ),
  ),
), 'simple', NULL);
$this->outputTypes['css'] = $ot;
$ot = new AgaviOutputType();
$ot->initialize($this->context, array (
  'http_headers' => 
  array (
    'Content-Type' => 'text/html; charset=UTF-8',
    'Cache-Control' => 'public',
    'Age' => '10',
    'Pragma' => NULL,
  ),
), 'simple', array (
  'php' => 
  array (
    'class' => 'AgaviPhpRenderer',
    'instance' => NULL,
    'parameters' => 
    array (
      'assigns' => 
      array (
        'routing' => 'ro',
        'request' => 'rq',
        'controller' => 'ct',
        'user' => 'us',
        'translation_manager' => 'tm',
        'request_data' => 'rd',
      ),
      'var_name' => 't',
    ),
  ),
), 'php', array (
  'simple' => 
  array (
    'layers' => 
    array (
      'content' => 
      array (
        'class' => 'AgaviFileTemplateLayer',
        'parameters' => 
        array (
        ),
        'renderer' => NULL,
        'slots' => 
        array (
        ),
      ),
    ),
    'parameters' => 
    array (
    ),
  ),
), 'simple', NULL);
$this->outputTypes['simple'] = $ot;
$ot = new AgaviOutputType();
$ot->initialize($this->context, array (
  'http_headers' => 
  array (
    'Content-Type' => 'application/json; charset=UTF-8',
  ),
), 'json', array (
), NULL, array (
), NULL, NULL);
$this->outputTypes['json'] = $ot;
$ot = new AgaviOutputType();
$ot->initialize($this->context, array (
  'http_headers' => 
  array (
    'Content-Type' => 'application/xml; charset=UTF-8',
  ),
), 'xml', array (
), NULL, array (
), NULL, NULL);
$this->outputTypes['xml'] = $ot;
$ot = new AgaviOutputType();
$ot->initialize($this->context, array (
  'http_headers' => 
  array (
    'Content-Type' => 'text/plain; charset=UTF-8',
  ),
), 'rest', array (
), NULL, array (
), NULL, NULL);
$this->outputTypes['rest'] = $ot;
$ot = new AgaviOutputType();
$ot->initialize($this->context, array (
  'http_headers' => 
  array (
    'Content-Type' => 'image/png;',
  ),
), 'image', array (
), NULL, array (
), NULL, NULL);
$this->outputTypes['image'] = $ot;
$ot = new AgaviOutputType();
$ot->initialize($this->context, array (
  'http_headers' => 
  array (
    'Content-Type' => 'application/pdf',
  ),
), 'pdf', array (
), NULL, array (
), NULL, NULL);
$this->outputTypes['pdf'] = $ot;
$ot = new AgaviOutputType();
$ot->initialize($this->context, array (
  'http_headers' => 
  array (
    'Content-Type' => 'text/comma-separated-values; charset=UTF-8',
  ),
), 'csv', array (
), NULL, array (
), NULL, NULL);
$this->outputTypes['csv'] = $ot;
$ot = new AgaviOutputType();
$ot->initialize($this->context, array (
  'http_headers' => 
  array (
    'Content-Type' => 'application/ms-excel',
  ),
), 'xls', array (
), NULL, array (
), NULL, NULL);
$this->outputTypes['xls'] = $ot;
$ot = new AgaviOutputType();
$ot->initialize($this->context, array (
  'http_headers' => 
  array (
    'Content-Type' => 'application/rtf',
  ),
), 'rtf', array (
), NULL, array (
), NULL, NULL);
$this->outputTypes['rtf'] = $ot;
$this->defaultOutputType = 'html';

?>