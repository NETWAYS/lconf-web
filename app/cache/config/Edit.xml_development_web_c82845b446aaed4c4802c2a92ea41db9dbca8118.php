<?php

// This is a compiled Agavi configuration file
// Compiled from: /usr/local/lconf-standalone/app/modules/AppKit/validate/Admin/Groups/Edit.xml
// Generated by: AgaviValidatorConfigHandler
// Date: 2011-09-02T13:29:54+0000

if($method == 'read') {
${'_validator_user_id'} = new AgaviRegexValidator();
${'_validator_user_id'}->initialize($this->getContext(), array (
  'match' => true,
  'severity' => 'error',
  'required' => false,
  'class' => 'regex',
  'name' => 'user_id',
  'pattern' => '@^\\d+|new$@',
), array (
  0 => 'id',
), array (
));
${'validationManager'}->addChild(${'_validator_user_id'});
${'_validator_container'} = new AgaviStringValidator();
${'_validator_container'}->initialize($this->getContext(), array (
  'min' => '1',
  'severity' => 'error',
  'required' => false,
  'class' => 'string',
  'name' => 'container',
), array (
  0 => 'container',
), array (
));
${'validationManager'}->addChild(${'_validator_container'});
}
if($method == 'write') {
${'_validator_user_id'} = new AgaviRegexValidator();
${'_validator_user_id'}->initialize($this->getContext(), array (
  'match' => true,
  'severity' => 'error',
  'required' => false,
  'class' => 'regex',
  'name' => 'user_id',
  'pattern' => '@^\\d+|new$@',
), array (
  0 => 'id',
), array (
));
${'validationManager'}->addChild(${'_validator_user_id'});
${'_validator_ignorePrincipals'} = new AgaviIssetValidator();
${'_validator_ignorePrincipals'}->initialize($this->getContext(), array (
  'severity' => 'error',
  'required' => false,
  'class' => 'isset',
  'name' => 'ignorePrincipals',
), array (
  0 => 'ignorePrincipals',
), array (
));
${'validationManager'}->addChild(${'_validator_ignorePrincipals'});
${'_validator_principal_value'} = new AgaviStringValidator();
${'_validator_principal_value'}->initialize($this->getContext(), array (
  'min' => '1',
  'severity' => 'error',
  'required' => false,
  'class' => 'string',
  'name' => 'principal_value',
  'base' => 'principal_value[][][]',
), array (
  0 => '',
), array (
  '' => 'Principal validation failed!',
));
${'validationManager'}->addChild(${'_validator_principal_value'});
${'_validator_principal_target'} = new AgaviStringValidator();
${'_validator_principal_target'}->initialize($this->getContext(), array (
  'min' => '1',
  'severity' => 'error',
  'required' => false,
  'class' => 'string',
  'name' => 'principal_target',
  'base' => 'principal_target[][][]',
), array (
  0 => '',
), array (
  '' => 'Principal validation failed!',
));
${'validationManager'}->addChild(${'_validator_principal_target'});
${'_validator_role_parent'} = new AgaviNumberValidator();
${'_validator_role_parent'}->initialize($this->getContext(), array (
  'type' => 'int',
  'severity' => 'error',
  'required' => false,
  'class' => 'number',
  'name' => 'role_parent',
), array (
  0 => 'role_parent',
), array (
));
${'validationManager'}->addChild(${'_validator_role_parent'});
${'_validator_role_name'} = new AgaviStringValidator();
${'_validator_role_name'}->initialize($this->getContext(), array (
  'min' => '1',
  'severity' => 'error',
  'required' => true,
  'class' => 'string',
  'name' => 'role_name',
  'max' => '40',
), array (
  0 => 'role_name',
), array (
  'min' => 'The rolename you supplied is fewer than 1 characters long.',
  'max' => 'Your rolename is too long',
  '' => 'You have to supply a rolename!',
));
${'validationManager'}->addChild(${'_validator_role_name'});
${'_validator_role_users'} = new AgaviStringValidator();
${'_validator_role_users'}->initialize($this->getContext(), array (
  'min' => '1',
  'severity' => 'error',
  'required' => false,
  'class' => 'string',
  'name' => 'role_users',
), array (
  0 => 'role_users',
), array (
  '' => 'Validation of \'role_users\' failed',
));
${'validationManager'}->addChild(${'_validator_role_users'});
${'_validator_role_description'} = new AgaviStringValidator();
${'_validator_role_description'}->initialize($this->getContext(), array (
  'min' => '1',
  'severity' => 'error',
  'required' => true,
  'class' => 'string',
  'name' => 'role_description',
  'max' => '255',
), array (
  0 => 'role_description',
), array (
  'min' => 'The description you supplied is fewer than 1 characters long.',
  'max' => 'Your description is too long',
  '' => 'You have to supply a description!',
));
${'validationManager'}->addChild(${'_validator_role_description'});
${'_validator_4e60da52aac097.95600318'} = new AgaviOroperatorValidator();
${'_validator_4e60da52aac097.95600318'}->initialize($this->getContext(), array (
  'break' => true,
  'severity' => 'error',
  'required' => true,
  'class' => 'or',
  'name' => '4e60da52aac097.95600318',
), array (
), array (
));
${'validationManager'}->addChild(${'_validator_4e60da52aac097.95600318'});
${'_validator_4e60da52ab0b09.94260755'} = new AgaviNumberValidator();
${'_validator_4e60da52ab0b09.94260755'}->initialize($this->getContext(), array (
  'type' => 'int',
  'severity' => 'error',
  'required' => false,
  'class' => 'number',
  'name' => '4e60da52ab0b09.94260755',
), array (
  0 => 'role_disabled',
), array (
));
${'_validator_4e60da52aac097.95600318'}->addChild(${'_validator_4e60da52ab0b09.94260755'});
${'_validator_4e60da52ab55d4.87021528'} = new AgaviSetValidator();
${'_validator_4e60da52ab55d4.87021528'}->initialize($this->getContext(), array (
  'severity' => 'error',
  'required' => false,
  'class' => 'set',
  'name' => '4e60da52ab55d4.87021528',
  'export' => 'role_disabled',
  'value' => '0',
), array (
), array (
));
${'_validator_4e60da52aac097.95600318'}->addChild(${'_validator_4e60da52ab55d4.87021528'});
}

?>