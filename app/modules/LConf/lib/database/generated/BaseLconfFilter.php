<?php
Doctrine_Manager::getInstance()->bindComponent('LconfFilter', 'icinga_web');

/**
 * BaseLconfFilters
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $filter_id
 * @property integer $user_id
 * @property string $filter_name
 * @property string $filter_json
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLconfFilter extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('lconf_filter');
        $this->hasColumn('filter_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '-1',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('filter_name', 'string', 127, array(
             'type' => 'string',
             'length' => 127,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('filter_json', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
     	$this->hasColumn('filter_isglobal', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => 0,
             'notnull' => true,
             'autoincrement' => false,
        ));
    }

	public function setUp()
    {
        parent::setUp();
        $this->hasOne('NsmUser', array(
             'local' => 'user_id',
             'foreign' => 'user_id' 
	        )
        );
    }
}
